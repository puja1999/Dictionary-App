{"version":3,"sources":["data/category.jsx","components/Header.jsx","components/Definitions.jsx","App.js","index.js"],"names":["categories","value","label","Header","category","setCategory","setWord","word","setMeanings","LightTheme","darkTheme","createMuiTheme","palette","primary","main","type","deb","useCallback","debounce","text","className","ThemeProvider","theme","TextField","id","onChange","e","target","select","handleChange","countries","map","option","MenuItem","Definitions","meanings","style","backgroundColor","borderRadius","src","phonetics","audio","controls","mean","item","definitions","def","color","definition","width","example","synonyms","s","App","useState","setLightTheme","dictionaryApi","a","axios","get","data","console","log","useEffect","PurpleSwitch","withStyles","switchBase","grey","checked","track","Switch","height","transition","Container","maxWidth","display","flexDirection","justifyContent","position","top","right","paddingTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1c3ddea.chunk.js","sourcesContent":["const categories = [\r\n    { value: \"English\", label: \"en\" },\r\n    { value: \"Hindi\", label: \"hi\" },\r\n    { value: \"Spanish\", label: \"es\" },\r\n    { value: \"French\", label: \"fr\" },\r\n    { value: \"Japanese\", label: \"ja\" },\r\n    { value: \"Russian\", label: \"ru\" },\r\n    { value: \"German\", label: \"de\" },\r\n    { value: \"Italian\", label: \"it\" },\r\n    { value: \"Korean\", label: \"ko\" },\r\n    { value: \"Brazilian Portuguese\", label: \"pt-BR\" },\r\n    { value: \"Arabic\", label: \"ar\" },\r\n    { value: \"Turkish\", label: \"tr\" },\r\n  ];\r\n  \r\n  export default categories;\r\n  ","import { createMuiTheme, TextField, ThemeProvider } from \"@material-ui/core\";\r\nimport React, { useCallback } from \"react\";\r\nimport \"../styles/header.css\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport countries from \"../data/category\";\r\nimport { debounce } from \"lodash\";\r\n\r\nconst Header = ({\r\n  category,\r\n  setCategory,\r\n  setWord,\r\n  word,\r\n  setMeanings,\r\n  LightTheme,\r\n}) => {\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: LightTheme ? \"#000\" : \"#fff\",\r\n      },\r\n      type: LightTheme ? \"light\" : \"dark\",\r\n    },\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setCategory(e.target.value);\r\n    setWord(\"\");\r\n    setMeanings([]);\r\n  };\r\n\r\n  const deb = useCallback(\r\n    debounce((text) => setWord(text), 1000),\r\n    []\r\n  );\r\n\r\n  const handleText = (text) => {\r\n    deb(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <span className=\"title\">{word ? word : \"Word Hunt\"}</span>\r\n      <div className=\"inputs\">\r\n        <ThemeProvider theme={darkTheme}>\r\n          <TextField\r\n            className=\"search\"\r\n            id=\"filled-basic\"\r\n            // value={word}\r\n            label=\"Search a Word\"\r\n            onChange={(e) => handleText(e.target.value)}\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Language\"\r\n            value={category}\r\n            onChange={(e) => handleChange(e)}\r\n            className=\"select\"\r\n          >\r\n            {countries.map((option) => (\r\n              <MenuItem key={option.label} value={option.label}>\r\n                {option.value}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </ThemeProvider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../styles/definitions.css\";\r\n\r\nconst Definitions = ({ meanings, word, LightTheme, category }) => {\r\n  return (\r\n    <div className=\"meanings\">\r\n      {/* audio---------------------------- */}\r\n      {meanings[0] && word && category === \"en\" && (\r\n        <audio\r\n          style={{ backgroundColor: \"#fff\", borderRadius: 10 }}\r\n          src={meanings[0].phonetics[0] && meanings[0].phonetics[0].audio}\r\n          controls\r\n        >\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n      )}\r\n      {/* audio---------------------------- */}\r\n\r\n      {word === \"\" ? (\r\n        <span className=\"subTitle\">Start by typing a word in search</span>\r\n      ) : (\r\n        meanings.map((mean) =>\r\n          mean.meanings.map((item) =>\r\n            item.definitions.map((def) => (\r\n              <div\r\n                className=\"singleMean\"\r\n                style={{\r\n                  backgroundColor: LightTheme ? \"#3b5360\" : \"white\",\r\n                  color: LightTheme ? \"white\" : \"black\",\r\n                }}\r\n              >\r\n                <b>{def.definition}</b>\r\n                <hr style={{ backgroundColor: \"black\", width: \"100%\" }} />\r\n                {def.example && (\r\n                  <span>\r\n                    <b>Example :</b> {def.example}\r\n                  </span>\r\n                )}\r\n                {def.synonyms && (\r\n                  <span>\r\n                    <b>Synonyms :</b> {def.synonyms.map((s) => `${s}, `)}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            ))\r\n          )\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Definitions;","import { Container, Switch, withStyles } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Definitions from \"./components/Definitions\";\n\nfunction App() {\n  const [word, setWord] = useState(\"\");\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState(\"en\");\n  const [LightTheme, setLightTheme] = useState(false);\n\n  const dictionaryApi = async () => {\n    try {\n      const data = await axios.get(\n        `https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`\n      );\n      setMeanings(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(meanings);\n\n  useEffect(() => {\n    dictionaryApi();\n    // eslint-disable-next-line\n  }, [word, category]);\n\n  const PurpleSwitch = withStyles({\n    switchBase: {\n      color: grey[50],\n      \"&$checked\": {\n        color: grey[900],\n      },\n      \"&$checked + $track\": {\n        backgroundColor: grey[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        height: \"100vh\",\n        backgroundColor: LightTheme ? \"#fff\" : \"#282c34\",\n        color: LightTheme ? \"black\" : \"white\",\n        transition: \"all 0.5s linear\",\n      }}\n    >\n      <Container\n        maxWidth=\"md\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100vh\",\n          justifyContent: \"space-evenly\",\n        }}\n      >\n        <div\n          style={{ position: \"absolute\", top: 0, right: 15, paddingTop: 10 }}\n        >\n          <span>{LightTheme ? \"Dark\" : \"Light\"} Mode</span>\n          <PurpleSwitch\n            checked={LightTheme}\n            onChange={() => setLightTheme(!LightTheme)}\n          />\n        </div>\n        <Header\n          setWord={setWord}\n          category={category}\n          setCategory={setCategory}\n          word={word}\n          setMeanings={setMeanings}\n          LightTheme={LightTheme}\n        />\n        {meanings && (\n          <Definitions\n            meanings={meanings}\n            word={word}\n            LightTheme={LightTheme}\n            category={category}\n          />\n        )}\n      </Container>\n      \n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}